// Code generated by gola 0.0.1; DO NOT EDIT.

package testdb

import (
	sqle "github.com/dolthub/go-mysql-server"

	"github.com/dolthub/go-mysql-server/memory"
	"github.com/dolthub/go-mysql-server/sql"
	"github.com/dolthub/go-mysql-server/sql/expression"
	"github.com/dolthub/vitess/go/sqltypes"
)

// Users represent a row in users table
type Users struct {
	//  bigint unsigned
	Id uint64 `json:"id"`
	// Name varchar(255)
	Name string `json:"name"`
	// Email address varchar(255)
	Email string `json:"email"`
	// Created Timestamp int unsigned
	CreatedAt uint `json:"created_at"`
	// Updated Timestamp int unsigned
	UpdatedAt uint `json:"updated_at"`
}

func NewUsers() *Users {
	return &Users{
		Name:      "",
		Email:     "",
		CreatedAt: uint(0),
		UpdatedAt: uint(0),
	}
}

func (o *Users) Save(engine *sqle.Engine) error {
	idb, _ := engine.Catalog.Database("testdb")
	db := idb.(*memory.Database)

	t := db.Tables()["users"].(*memory.Table)
	ctx := sql.NewEmptyContext()
	return t.Insert(ctx, sql.NewRow(
		o.Id,
		o.Name,
		o.Email,
		o.CreatedAt,
		o.UpdatedAt,
	))
}

// AddUsersTable adds Users table to given db
func AddUsersTable(db *memory.Database) {
	tableName := "users"
	defaultName, _ := sql.NewColumnDefaultValue(expression.NewLiteral("", sql.MustCreateStringWithDefaults(sqltypes.VarChar, 255)), sql.MustCreateStringWithDefaults(sqltypes.VarChar, 255), true, false)
	defaultEmail, _ := sql.NewColumnDefaultValue(expression.NewLiteral("", sql.MustCreateStringWithDefaults(sqltypes.VarChar, 255)), sql.MustCreateStringWithDefaults(sqltypes.VarChar, 255), true, false)
	defaultCreatedAt, _ := sql.NewColumnDefaultValue(expression.NewLiteral(uint(0), sql.Uint32), sql.Uint32, true, false)
	defaultUpdatedAt, _ := sql.NewColumnDefaultValue(expression.NewLiteral(uint(0), sql.Uint32), sql.Uint32, true, false)

	t := memory.NewTable(tableName, sql.Schema{
		{Name: "id", Type: sql.Uint64, Nullable: false, Source: "users",
			AutoIncrement: true, Comment: "", PrimaryKey: false},
		{Name: "name", Type: sql.MustCreateStringWithDefaults(sqltypes.VarChar, 255), Nullable: false, Source: "users",
			AutoIncrement: false, Comment: "Name", PrimaryKey: false, Default: defaultName},
		{Name: "email", Type: sql.MustCreateStringWithDefaults(sqltypes.VarChar, 255), Nullable: false, Source: "users",
			AutoIncrement: false, Comment: "Email address", PrimaryKey: false, Default: defaultEmail},
		{Name: "created_at", Type: sql.Uint32, Nullable: false, Source: "users",
			AutoIncrement: false, Comment: "Created Timestamp", PrimaryKey: false, Default: defaultCreatedAt},
		{Name: "updated_at", Type: sql.Uint32, Nullable: false, Source: "users",
			AutoIncrement: false, Comment: "Updated Timestamp", PrimaryKey: false, Default: defaultUpdatedAt},
	})
	db.AddTable(tableName, t)
}
